{
	"name": "shlokam-hms",
	"version": "0.1.0",
	"private": true,
	"scripts": {
		"dev": "next dev",
		"build": "next build",
		"start": "next start",
		"lint": "next lint --fix",
		"lint:check": "next lint",
		"lint:ci": "eslint . --ext .ts,.tsx,.js,.jsx --format json --output-file eslint-report.json",
		"lint:enterprise": "eslint . --config .eslintrc.enterprise.json --ext .ts,.tsx,.js,.jsx",
		"lint:security": "eslint . --ext .ts,.tsx,.js,.jsx --config eslint.config.security.js",
		"lint:report": "eslint . --ext .ts,.tsx,.js,.jsx --format html --output-file reports/eslint-report.html",
		"lint:fix:all": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
		"format": "prettier --write .",
		"format:check": "prettier --check .",
		"format:enterprise": "prettier --write . --config .prettierrc.enterprise.json",
		"prettier:check:enterprise": "prettier --check . --config .prettierrc.enterprise.json",
		"prettier:write:safe": "prettier --write . --ignore-unknown",
		"type-check": "tsc --noEmit",
		"type-check:strict": "tsc --noEmit --strict --exactOptionalPropertyTypes",
		"type-check:coverage": "typescript-coverage-report -p tsconfig.json",
		"type-check:enterprise": "tsc --noEmit --project tsconfig.enterprise.json",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:coverage": "jest --config jest.config.enterprise.js --coverage",
		"test:ci": "jest --coverage --watchAll=false --passWithNoTests --maxWorkers=4",
		"test:unit": "jest --config jest.config.enterprise.js",
		"test:unit:coverage": "jest --testPathPattern=unit --coverage --coverageReporters=lcov,json,html",
		"test:component": "jest --testPathPattern=component",
		"test:component:coverage": "jest --testPathPattern=component --coverage",
		"test:integration": "jest --testPathPattern=integration --runInBand",
		"test:api:integration": "jest --testPathPattern=api --runInBand",
		"test:database:integration": "jest --testPathPattern=database --runInBand",
		"test:migration:validation": "npm run db:migrate:test && npm run test:database:integration",
		"test:report:merge": "nyc merge coverage .nyc_output/out.json",
		"test:report:html": "nyc report --reporter=html --report-dir=coverage/html",
		"test:e2e": "playwright test",
		"test:e2e:ui": "playwright test --ui",
		"test:e2e:critical": "playwright test --config=playwright.critical.config.ts",
		"test:e2e:healthcare": "playwright test --config=playwright.healthcare.config.ts",
		"test:smoke:staging": "playwright test --config=playwright.smoke.config.ts",
		"test:production:validation": "playwright test --config=playwright.production.config.ts",
		"test:performance": "k6 run tests/performance/load-test.ts",
		"test:performance:quick": "k6 run tests/performance/load-test.ts --duration=30s --vus=5",
		"test:performance:extended": "k6 run tests/performance/load-test.ts --duration=10m --vus=50",
		"test:stress": "k6 run tests/stress/stress-test.ts",
		"test:accessibility:axe": "axe --dir test-results/accessibility src/",
		"test:accessibility:lighthouse": "lhci autorun",
		"security:audit": "npm audit --audit-level=moderate",
		"security:fix": "npm audit fix",
		"security:scan": "npm audit --audit-level moderate && snyk test",
		"security:monitor": "snyk monitor",
		"security:report": "npm audit --json > security-audit-report.json",
		"fhir:validate:r4": "node scripts/fhir/validate-r4-compliance.js",
		"fhir:structure:validation": "node scripts/fhir/validate-structure.js",
		"fhir:compliance": "npm run fhir:validate:r4 && npm run fhir:structure:validation",
		"fhir:production": "node scripts/fhir/production-validation.js",
		"compliance:hipaa": "python scripts/compliance/hipaa-validation.py",
		"compliance:gdpr": "tsx scripts/compliance/gdpr-validation.ts",
		"compliance:full": "npm run compliance:hipaa && npm run compliance:gdpr",
		"db:generate": "prisma generate",
		"db:push": "prisma db push",
		"db:migrate": "prisma migrate dev",
		"db:migrate:prod": "prisma migrate deploy",
		"db:migrate:test": "prisma migrate deploy",
		"db:studio": "prisma studio",
		"db:seed": "tsx prisma/seed.ts",
		"db:seed:test": "tsx prisma/seed-test.ts",
		"db:reset": "npm run migrate:reset && npm run migrate:seed",
		"build:worker": "opennextjs-cloudflare",
		"build:production": "NODE_ENV=production npm run build",
		"build:analyze": "ANALYZE=true npm run build",
		"build:microservices": "cd microservices && ./mvnw clean package",
		"install:microservices": "cd microservices && ./mvnw clean install",
		"sonar": "sonar-scanner",
		"sonar:enterprise": "sonar-scanner -Dsonar.projectKey=hms-enterprise",
		"validate": "npm run type-check && npm run lint:check && npm run format:check && npm run test:ci",
		"validate:enterprise": "npm run type-check:enterprise && npm run lint:enterprise && npm run format:check && npm run test:ci && npm run security:scan",
		"validate:full": "npm run validate:enterprise && npm run compliance:full && npm run fhir:compliance",
		"clean": "rm -rf .next dist coverage .tsbuildinfo reports test-results",
		"clean:all": "npm run clean && rm -rf node_modules .npm .cache",
		"preview": "opennextjs-cloudflare && wrangler dev",
		"cf-typegen": "wrangler types --env-interface CloudflareEnv env.d.ts",
		"nx:graph": "nx graph",
		"nx:build": "nx build",
		"nx:test": "nx test",
		"nx:lint": "nx lint",
		"setup:husky": "husky install",
		"setup:enterprise": "npm run setup:husky && npm run install:microservices && npm run db:generate",
		"monitor:health": "tsx scripts/monitoring/health-check.ts",
		"monitor:performance": "tsx scripts/monitoring/performance-check.ts",
		"prepare": "husky",
		"postinstall": "npm run db:generate",
		"deploy:staging": "node scripts/deployment/deploy-staging.js",
		"deploy:production": "node scripts/deployment/deploy-production.js",
		"docker:build": "docker build -t hms-enterprise:latest .",
		"docker:build:microservices": "cd microservices && docker-compose build",
		"docker:up": "docker-compose up -d",
		"docker:down": "docker-compose down",
		"k8s:deploy": "kubectl apply -f k8s/",
		"k8s:delete": "kubectl delete -f k8s/",
		"report:coverage": "nyc report --reporter=lcov --reporter=text",
		"report:security": "node scripts/reporting/security-report.js",
		"report:compliance": "node scripts/reporting/compliance-report.js",
		"db:validate": "prisma validate",
		"validate:complete": "npm run type-check && npm run lint:check && npm run test:unit && npm run security:scan",
		"hooks:test": "echo 'Testing git hooks setup'",
		"lint:fix": "eslint . --config .eslintrc.enterprise.json --ext .ts,.tsx,.js,.jsx --fix",
		"migrate": "tsx scripts/migrate.ts",
		"migrate:up": "tsx scripts/migrate.ts up",
		"migrate:down": "tsx scripts/migrate.ts down",
		"migrate:status": "tsx scripts/migrate.ts status",
		"migrate:create": "tsx scripts/migrate.ts create",
		"migrate:reset": "tsx scripts/migrate.ts reset",
		"migrate:seed": "tsx scripts/migrate.ts seed",
		"db:fresh": "npm run migrate:reset && npm run migrate:up && npm run migrate:seed",
		"format:fix": "prettier --write .",
		"quality:check": "npm run lint:enterprise && npm run format:check",
		"security:scan:full": "npm audit --audit-level low && eslint . --ext .ts,.tsx,.js,.jsx",
		"security:fix:all": "npm audit fix --force && eslint . --ext .ts,.tsx,.js,.jsx --fix",
		"security:validate": "npm run security:scan:full && npm run type-check:strict",
		"build:secure": "NODE_ENV=production npm run security:validate && npm run build"
	},
	"dependencies": {
		"@ant-design/icons": "^6.0.0",
		"@hookform/resolvers": "^5.0.1",
		"@radix-ui/react-accordion": "^1.2.11",
		"@radix-ui/react-alert-dialog": "^1.1.4",
		"@radix-ui/react-aspect-ratio": "^1.1.1",
		"@radix-ui/react-avatar": "^1.1.2",
		"@radix-ui/react-checkbox": "^1.2.3",
		"@radix-ui/react-collapsible": "^1.1.2",
		"@radix-ui/react-context-menu": "^2.2.4",
		"@radix-ui/react-dialog": "^1.1.4",
		"@radix-ui/react-dropdown-menu": "^2.1.4",
		"@radix-ui/react-hover-card": "^1.1.4",
		"@radix-ui/react-label": "^2.1.7",
		"@radix-ui/react-menubar": "^1.1.4",
		"@radix-ui/react-navigation-menu": "^1.2.3",
		"@radix-ui/react-popover": "^1.1.11",
		"@radix-ui/react-progress": "^1.1.6",
		"@radix-ui/react-radio-group": "^1.3.7",
		"@radix-ui/react-scroll-area": "^1.2.2",
		"@radix-ui/react-select": "^2.2.2",
		"@radix-ui/react-separator": "^1.1.6",
		"@radix-ui/react-slider": "^1.2.2",
		"@radix-ui/react-slot": "^1.2.0",
		"@radix-ui/react-switch": "^1.1.2",
		"@radix-ui/react-tabs": "^1.1.9",
		"@radix-ui/react-toast": "^1.2.4",
		"@radix-ui/react-toggle": "^1.1.1",
		"@radix-ui/react-toggle-group": "^1.1.1",
		"@radix-ui/react-tooltip": "^1.2.4",
		"antd": "^5.24.9",
		"bcryptjs": "^2.4.3",
		"caniuse-lite": "1.0.30001281",
		"class-variance-authority": "^0.7.1",
		"cloudflare": "^4.2.0",
		"clsx": "^2.1.1",
		"cmdk": "^1.1.1",
		"date-fns": "^4.1.0",
		"dayjs": "^1.11.13",
		"embla-carousel-react": "^8.5.2",
		"input-otp": "^1.4.2",
		"iron-session": "^8.0.4",
		"lucide-react": "^0.503.0",
		"moment": "^2.30.1",
		"nanoid": "^5.1.5",
		"next": "^15.1.4",
		"next-auth": "^4.24.11",
		"next-themes": "^0.4.6",
		"pg": "^8.15.6",
		"react": "^19.0.0",
		"react-day-picker": "^9.6.7",
		"react-dom": "^19.0.0",
		"react-hook-form": "^7.54.2",
		"react-resizable-panels": "^2.1.7",
		"@tanstack/react-table": "^8.19.0",
		"recharts": "^2.12.4",
		"sonner": "^2.0.3",
		"tailwind-merge": "^2.6.0",
		"tailwindcss-animate": "^1.0.7",
		"vaul": "^1.1.2",
		"zod": "^3.24.3",
		"jsonwebtoken": "^9.0.2",
		"jose": "^5.9.6",
		"helmet": "^8.0.0",
		"express-rate-limit": "^7.4.1",
		"cors": "^2.8.5",
		"crypto-js": "^4.2.0",
		"speakeasy": "^2.0.0",
		"qrcode": "^1.5.4",
		"redis": "^4.7.0",
		"ioredis": "^5.4.1",
		"winston": "^3.16.0",
		"morgan": "^1.10.0",
		"@opentelemetry/api": "^1.9.0",
		"@opentelemetry/sdk-node": "^0.54.2",
		"@opentelemetry/auto-instrumentations-node": "^0.50.0",
		"prom-client": "^13.2.0",
		"express-prom-bundle": "^6.6.0",
		"node-cron": "^3.0.3",
		"bull": "^4.16.3",
		"express-validator": "^7.2.0",
		"xss": "^1.0.15",
		"dompurify": "^3.2.0",
		"express-slow-down": "^2.0.3",
		"@prisma/extension-accelerate": "^1.1.0"
	},
	"devDependencies": {
		"@cloudflare/workers-types": "^4.20250429.0",
		"@commitlint/cli": "^19.8.0",
		"@commitlint/config-conventional": "^19.8.0",
		"@eslint/eslintrc": "^3.3.1",
		"@eslint/js": "^9.26.0",
		"@jest/globals": "^29.7.0",
		"@next/bundle-analyzer": "^15.3.1",
		"@nx/devkit": "19.8.4",
		"@nx/eslint": "19.8.4",
		"@nx/jest": "19.8.4",
		"@nx/js": "19.8.4",
		"@nx/next": "19.8.4",
		"@nx/node": "19.8.4",
		"@nx/react": "19.8.4",
		"@nx/workspace": "19.8.4",
		"@opennextjs/cloudflare": "^1.0.0",
		"@playwright/test": "^1.52.0",
		"@prisma/client": "^6.7.0",
		"@testing-library/jest-dom": "^6.6.3",
		"@testing-library/react": "^16.3.0",
		"@testing-library/user-event": "^14.5.2",
		"@types/bcryptjs": "^2.4.6",
		"@types/jest": "^29.5.14",
		"@types/node": "^24",
		"@types/pg": "^8.15.1",
		"@types/react": "^19",
		"@types/react-dom": "^19",
		"@types/uuid": "^10.0.0",
		"@types/jsonwebtoken": "^9.0.7",
		"@types/cors": "^2.8.17",
		"@types/crypto-js": "^4.2.2",
		"@types/qrcode": "^1.5.5",
		"@types/morgan": "^1.9.9",
		"@types/node-cron": "^3.0.11",
		"@typescript-eslint/eslint-plugin": "^8.31.1",
		"@typescript-eslint/parser": "^8.32.1",
		"autoprefixer": "^10.0.1",
		"cross-env": "^7.0.3",
		"eslint": "^9",
		"eslint-config-next": "15.3.1",
		"eslint-config-prettier": "^10.1.2",
		"eslint-plugin-jest": "^28.11.0",
		"eslint-plugin-security": "^3.0.1",
		"eslint-plugin-sonarjs": "^1.0.4",
		"eslint-plugin-unicorn": "^56.0.1",
		"eslint-plugin-unused-imports": "^4.1.4",
		"globals": "^16.0.0",
		"husky": "^9.1.7",
		"jest": "^29.7.0",
		"jest-environment-jsdom": "^29.7.0",
		"jest-junit": "^16.0.0",
		"jest-sonar-reporter": "^2.0.0",
		"lint-staged": "^15.5.1",
		"msw": "^2.4.10",
		"nx": "19.8.4",
		"postcss": "^8",
		"prettier": "^3.5.3",
		"prisma": "^6.7.0",
		"sonarqube-scanner": "^4.2.1",
		"tailwindcss": "^3.4.0",
		"ts-jest": "^29.3.4",
		"ts-node": "^10.9.2",
		"tsx": "^4.16.5",
		"turbo": "^2.5.3",
		"typescript": "^5.8.3",
		"typescript-eslint": "^8.32.0",
		"webpack-bundle-analyzer": "^4.10.2",
		"wrangler": "^4.14.0"
	},
	"lint-staged": {
		"*.{ts,tsx}": ["eslint --fix"],
		"*.{ts,tsx,css,md}": ["prettier --write"]
	},
	"packageManager": "pnpm@10.0.0-rc.2+sha512.b6e59b96f90ca92449ac2f6dca9b430880448fc97d21f0fa9200e3d5ddb5289ad535255400554f7f3486e2d60058492161aaa9b58828e81f50c096718be9d156"
}
